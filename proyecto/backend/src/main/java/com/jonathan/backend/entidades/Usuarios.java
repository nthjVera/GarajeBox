package com.jonathan.backend.entidades;

// default package
// Generated 23 mar 2025, 19:34:28 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonManagedReference;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;

/**
 * Usuarios generated by hbm2java
 */
@Entity
@Table(name = "usuarios", catalog = "garagebox", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Usuarios implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idUsuario;
	private String nombre;
	private String email;
	private String contrasena;
	private String telefono;
	private String tipoUsuario;
	private String fotoPerfil;
	private String token;
	private Date fechaRegistro = new Date();
	private Set<MecanicosCitas> mecanicosCitases = new HashSet<MecanicosCitas>(0);
	private Set<Conversaciones> conversacionesesForIdUsuario1 = new HashSet<Conversaciones>(0);
	private Set<Citas> citases = new HashSet<Citas>(0);
	private Set<Mensajes> mensajeses = new HashSet<Mensajes>(0);
	private Set<Vehiculos> vehiculoses = new HashSet<Vehiculos>(0);
	private Set<Conversaciones> conversacionesesForIdUsuario2 = new HashSet<Conversaciones>(0);

	public Usuarios() {
	}

	public Usuarios(Long idUsuario, String nombre, String email, String contrasena) {
		this.idUsuario = idUsuario;
		this.nombre = nombre;
		this.email = email;
		this.contrasena = contrasena;
	}

	public Usuarios(Long idUsuario, String nombre, String email, String contrasena, String telefono, String tipoUsuario,
			Date fechaRegistro, Set<MecanicosCitas> mecanicosCitases, Set<Conversaciones> conversacionesesForIdUsuario1, Set<Citas> citases, Set<Mensajes> mensajeses,
			Set<Vehiculos> vehiculoses, Set<Conversaciones> conversacionesesForIdUsuario2) {
		this.idUsuario = idUsuario;
		this.nombre = nombre;
		this.email = email;
		this.contrasena = contrasena;
		this.telefono = telefono;
		this.tipoUsuario = tipoUsuario;
		this.fechaRegistro = fechaRegistro;
		this.mecanicosCitases = mecanicosCitases;
		this.conversacionesesForIdUsuario1 = conversacionesesForIdUsuario1;
		this.citases = citases;
		this.mensajeses = mensajeses;
		this.vehiculoses = vehiculoses;
		this.conversacionesesForIdUsuario2 = conversacionesesForIdUsuario2;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_usuario", unique = true, nullable = false)
	public Long getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(Long idUsuario) {
		this.idUsuario = idUsuario;
	}

	@Column(name = "nombre", nullable = false, length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "contrasena", nullable = false)
	public String getContrasena() {
		return this.contrasena;
	}

	public void setContrasena(String contrasena) {
		this.contrasena = contrasena;
	}

	@Column(name = "telefono", length = 15)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}
	
	@Column(name = "fotoPerfil", nullable = true, length = 200)
	public String getFotoPerfil() {
		return this.fotoPerfil;
	}

	public void setFotoPerfil(String fotoPerfil) {
		this.fotoPerfil = fotoPerfil;
	}
	
	@Column(name = "token", nullable = true, length = 200)
	public String getToken() {
		return this.token;
	}

	public void setToken(String token) {
		this.token = token;
	}
	
	@Column(name = "tipo_usuario", length = 50)
	public String getTipoUsuario() {
		return this.tipoUsuario;
	}

	public void setTipoUsuario(String tipoUsuario) {
		this.tipoUsuario = tipoUsuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_registro", length = 29)
	public Date getFechaRegistro() {
		return this.fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		this.fechaRegistro = fechaRegistro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarios")
	public Set<MecanicosCitas> getMecanicosCitases() {
		return this.mecanicosCitases;
	}

	public void setMecanicosCitases(Set<MecanicosCitas> mecanicosCitases) {
		this.mecanicosCitases = mecanicosCitases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuariosByIdUsuario1")
	public Set<Conversaciones> getConversacionesesForIdUsuario1() {
		return this.conversacionesesForIdUsuario1;
	}

	public void setConversacionesesForIdUsuario1(Set<Conversaciones> conversacionesesForIdUsuario1) {
		this.conversacionesesForIdUsuario1 = conversacionesesForIdUsuario1;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarios")
	@JsonManagedReference("usuario-cita")
	public Set<Citas> getCitases() {
		return this.citases;
	}

	public void setCitases(Set<Citas> citases) {
		this.citases = citases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarios")
	public Set<Mensajes> getMensajeses() {
		return this.mensajeses;
	}

	public void setMensajeses(Set<Mensajes> mensajeses) {
		this.mensajeses = mensajeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarios")
	@JsonManagedReference("usuario-vehiculo")
	public Set<Vehiculos> getVehiculoses() {
		return this.vehiculoses;
	}

	public void setVehiculoses(Set<Vehiculos> vehiculoses) {
		this.vehiculoses = vehiculoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuariosByIdUsuario2")
	public Set<Conversaciones> getConversacionesesForIdUsuario2() {
		return this.conversacionesesForIdUsuario2;
	}

	public void setConversacionesesForIdUsuario2(Set<Conversaciones> conversacionesesForIdUsuario2) {
		this.conversacionesesForIdUsuario2 = conversacionesesForIdUsuario2;
	}

}
